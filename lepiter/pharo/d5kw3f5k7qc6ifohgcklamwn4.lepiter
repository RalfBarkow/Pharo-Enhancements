{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-07-27T10:02:38.741497-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-07-27T10:02:38.741497-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+ws+D32EDQCbUVEDDDM03g=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Per Pierce Ng, in [this enlightening thread](http://forum.world.st/Easiest-light-weight-cloud-web-persistence-for-Pharo-td5123027.html):\rIf you are familiar with Docker then starting a database server is easy \rthat way. Assuming you pick a 'boring' product then what matters for \ryour app is the quality of the database interface code on Pharo for that \rproduct. For PostgreSQL and MySQL no problem. I've not used Mongo itself \rnor Voyage so no comment. \r\rIf you neither want to run a separate database server nor roll your own \rwriting out to Fuel etc, then you're looking at 'embedded' databases. \rFor pure Smalltalk, Omnibase or SimplePersistence. If you are ok with \rsomething that uses FFI, then SQLite, Unqlite and probably others. \r\rPersonally I'd choose SQLite because it is boring - ubiquitous, high \rquality, and importantly unlike the pure Smalltalk and many embedded \rkey-value databases there is a plethora of external tools that operate \ron SQLite databases which will help your debugging. \r\rFor SQL databases you can also use an ORM like Glorp or ReStore. \r\rFinally there are also NoSQL-as-a-service like Google Firebase. \r\rMany options. Great time sinks. :-) Have fun. \r\r- [PostgreSQL](https://github.com/svenvc/p3)\r- [MySQL](https://github.com/pharo-rdbms/Pharo-MySQL)\r- [Omnibase](https://github.com/sebastianconcept/OmniBase)  \r- [SimplePersistence](https://github.com/seandenigris/Simple-Persistence)\r- [SQLite](https://github.com/pharo-rdbms/Pharo-SQLite3)\r- [Unqlite](https://github.com/mumez/PunQLite)\r- [Glorp](https://github.com/pharo-rdbms/glorp)\r- [ReStore](https://github.com/rko281/ReStoreForPharo)\r- [Firebase](https://github.com/psvensson/firebase-st)\r- [Choose Boring Technology](http://boringtechnology.club/)\r"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-07-27T10:02:38.741494-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-07-27T10:02:38.741494-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Persistence"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "c04ccc0e-7d84-0d00-9b2b-c21c0c3334de"
	}
}