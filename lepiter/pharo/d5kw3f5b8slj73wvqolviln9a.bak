{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:34:33.743618-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:34:33.743618-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "LeniavWLDQCbOvtwBeF2UQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Object state"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:28:49.988889-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:34:33.746241-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "PqFlVvWLDQCbNUplBeF2UQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`StateSpecs` is a wonderful state specification library. It is hosted [on GH](https://github.com/dionisiydk/StateSpecs) and [the README](https://github.com/dionisiydk/StateSpecs#readme) gives quite a nice overview.\r\rThe main access point is {{gtMethod:Object>>#should}}.  {{gtClass:SpecOfShouldExpression}} is the internal workhorse where you can see all the built-in message you can send after `should`.\r\rTo add your own class-specific messages,  subclass {{gtClass:SpecOfShouldExpression}} and redefine {{gtMethod:Object>>#should}} to use your subclass. The one caveat is that it seems if you send {{gtMethod:SpecOfShouldExpression class>>#startingAt:}}, the global pragma/object setting described in {{gtClass:SpecOfShouldExpression|show=#gtCoderCommentsFor:|label='the class commen'}} will prevent your subclass from being used. To work around this, just skip that message and define your message thusly:\r```\rMyDomainObject>>#should\r\t^ MyCustomShouldSpec withReceiver: self asShouldExpressionReceiver\r```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T11:40:35.603479-04:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T11:40:35.603479-04:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "SHF0gPWLDQCbRDAuBeF2UQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "At first, the following \"elegant\" method seemed like a great idea:\n```\nCwIPAddressShouldSpec>>#equal: anObject\r\t^ super equal: anObject asCwIPAddress\n```\nOne could use the same method to compare an IP address to its string value, integerValue, etc.\n\nHowever, in practice it just felt a bit too magical. When reading the tests much later, the thought occurred: \"what does it mean for an IP address to equal a string?\" Sure, one could probably guess, but it was causing a bit of cognitive load. Also, once IP address was subclassed, there was no way to inject the subclass as the result of `asCwIPAddress`, causing equality to fail.\n\nIn the end, the following two methods seemed clearer and more robust:"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T11:34:48.082602-04:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T11:40:35.607779-04:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "jqSKa/WLDQCbPXGLBeF2UQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "```\nCwIPAddressShouldSpec>>#equalString: aString\r\t^ super equal: (self receiver value class fromString: aString)\n```\n\n```\nCwIPAddressShouldSpec>>#equalInteger: anInteger\r\t^ super equal: (self receiver value class fromInteger: anInteger)\n```"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:34:38.721895-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:35:47.4522-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KrwQa/WLDQCbO7M1BeF2UQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Too much magic"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-07-27T10:02:38.751649-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T11:28:52.350269-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ojM+D32EDQCbVysUDDM03g=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Mocking\r<https://github.com/dionisiydk/Mocketry>"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-07-27T10:02:38.751646-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-07-27T10:02:38.751646-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Testing_Examples"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "fee6ce0e-7d84-0d00-9b31-74140c3334de"
	}
}